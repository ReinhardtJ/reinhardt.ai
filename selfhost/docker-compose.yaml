services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    expose:
      - 80
    container_name: nginx-proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - ./proxy.conf:/etc/nginx/conf.d/proxy.conf:ro
    restart: always

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflare_tunnel
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
  khoj-database:
    image: docker.io/pgvector/pgvector:pg15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - khoj_db:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  khoj-sandbox:
    image: ghcr.io/khoj-ai/terrarium:latest
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 2

  khoj-search:
    image: docker.io/searxng/searxng:latest
    volumes:
      - khoj_search:/etc/searxng
    environment:
      - SEARXNG_BASE_URL=http://localhost:8080/

  khoj-middleware:
    build: ./khoj-api-middleware
    environment:
      - KHOJ_SERVICE_URL=http://khoj-server:42110
      - KHOJ_API_TOKEN
      - VIRTUAL_HOST=khoj-api.reinhardt.ai
      - VIRTUAL_PORT=80
    expose:
      - "80"

  khoj-server:
    depends_on:
      khoj-database:
        condition: service_healthy
    image: ghcr.io/khoj-ai/khoj-cloud:latest
    expose:
      - "42110"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    working_dir: /app
    volumes:
      - khoj_config:/root/.khoj/
      - khoj_models:/root/.cache/torch/sentence_transformers
      - khoj_models:/root/.cache/huggingface
    environment:
      - VIRTUAL_HOST=khoj.reinhardt.ai
      - VIRTUAL_PORT=42110
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=khoj-database
      - POSTGRES_PORT=5432
      - KHOJ_DJANGO_SECRET_KEY
      - KHOJ_DEBUG=False
      - KHOJ_ADMIN_EMAIL
      - KHOJ_ADMIN_PASSWORD
      - GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET
      - KHOJ_TERRARIUM_URL=http://khoj-sandbox:8080
      - KHOJ_SEARXNG_URL=http://khoj-search:8080
      - OPENAI_API_KEY
      - GEMINI_API_KEY
      - ANTHROPIC_API_KEY
      - JINA_API_KEY
      - KHOJ_DOMAIN=khoj.reinhardt.ai
      - KHOJ_ALLOWED_DOMAIN=khoj.reinhardt.ai

  agent-zero-server:
    image: frdel/agent-zero-run:latest
    container_name: agent-zero-server
    expose:
      - "80"
    volumes:
      - agent_zero_data:/a0
    environment:
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=a0.reinhardt.ai
    restart: always

  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - VIRTUAL_HOST=immich.reinhardt.ai
      - VIRTUAL_PORT=2283
    env_file:
      - .env
    expose:
      - '2283'
    depends_on:
      - immich-redis
      - immich-database
    restart: always

  immich-machine-learning:
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    restart: always

  immich-redis:
    image: docker.io/valkey/valkey:8-bookworm@sha256:42cba146593a5ea9a622002c1b7cba5da7be248650cbb64ecb9c6c33d29794b1
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  immich-database:
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
      - POSTGRES_INITDB_ARGS="--data-checksums"
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    restart: always




volumes:
  certs:
  vhost:
  html:
  khoj_config:
  khoj_db:
  khoj_models:
  khoj_search:
  agent_zero_data:
  model-cache:
