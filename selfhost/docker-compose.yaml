services:
    # immich
  immich-ts:
    image: tailscale/tailscale:latest
    container_name: immich-ts
    hostname: immich
    environment:
      - TS_AUTHKEY
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_SERVE_CONFIG=/config/immich-serve.json
      - TS_EXTRA_ARGS=--advertise-tags=tag:cname-immich
    volumes:
      - ./ts-data/immich:/var/lib/tailscale
      - ./ts-config:/config
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    restart: on-failure:10
    networks:
      - immich_net
    logging:
      options:
        max-size: "50m"

  immich-server:
    container_name: immich-server
    image: ghcr.io/immich-app/immich-server:release
    network_mode: service:immich-ts
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    depends_on:
      - immich-ts
      - immich-redis
      - immich-database
    restart: on-failure:10
    logging:
      options:
        max-size: "50m"

  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:release
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    environment:
      - REDIS_HOSTNAME=immich-redis
    restart: on-failure:10
    networks:
      - immich_net
    logging:
      options:
        max-size: "50m"

  immich-redis:
    container_name: immich-redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:ff21bc0f8194dc9c105b769aeabf9585fea6a8ed649c0781caeac5cb3c247884
    healthcheck:
      test: redis-cli ping || exit 1
    restart: on-failure:10
    networks:
      - immich_net
    logging:
      options:
        max-size: "50m"

  immich-database:
    container_name: immich-database
    image: ghcr.io/immich-app/postgres:14-vectorchord0.3.0-pgvectors0.2.0
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
      - POSTGRES_INITDB_ARGS="--data-checksums"
    volumes:
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    restart: on-failure:10
    networks:
      - immich_net
    logging:
      options:
        max-size: "50m"

  immich-backup:
    build:
      context: .
      dockerfile: immich-backup.Dockerfile
    container_name: immich-backup
    network_mode: service:immich-ts
    volumes:
      - ./immich-library:/immich-library:ro
      - ./immich-backup-logs:/logs
    environment:
      - RCLONE_REMOTE_HOST=${RCLONE_REMOTE_HOST}
      - RCLONE_REMOTE_USER=${RCLONE_REMOTE_USER}
      - RCLONE_SSH_KEY=${RCLONE_SSH_KEY}
    env_file:
      - .env
    depends_on:
      - immich-ts
    restart: on-failure:10
    logging:
      options:
        max-size: "50m"

  # KHOJ
  khoj-ts:
    image: tailscale/tailscale:latest
    container_name: khoj-ts
    hostname: khoj
    environment:
      - TS_AUTHKEY
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_SERVE_CONFIG=/config/khoj-serve.json

    volumes:
      - ./ts-data/khoj:/var/lib/tailscale
      - ./ts-config:/config
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    restart: on-failure:10
    networks:
      - khoj_net
    logging:
      options:
        max-size: "50m"

  khoj-server:
    container_name: khoj-server
    depends_on:
      khoj-database:
        condition: service_healthy
      khoj-ts:
        condition: service_started
    image: ghcr.io/khoj-ai/khoj:latest
    network_mode: service:khoj-ts
    working_dir: /app
    volumes:
      - khoj_config:/root/.khoj/
      - khoj_models:/root/.cache/torch/sentence_transformers
      - khoj_models:/root/.cache/huggingface
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=khoj-database
      - POSTGRES_PORT=5432
      - KHOJ_DJANGO_SECRET_KEY
      - KHOJ_DEBUG=False
      - KHOJ_ADMIN_EMAIL
      - KHOJ_ADMIN_PASSWORD
      - KHOJ_TERRARIUM_URL=http://khoj-sandbox:8080
      - KHOJ_SEARXNG_URL=http://khoj-search:8080
      - OPENAI_API_KEY
      - GEMINI_API_KEY
      - ANTHROPIC_API_KEY
      - JINA_API_KEY
      - KHOJ_DOMAIN=khoj
      - KHOJ_ALLOWED_DOMAIN=khoj
      - KHOJ_NO_HTTPS=True
    command: --host="0.0.0.0" --port=80 -vv --non-interactive --anonymous-mode
    restart: on-failure:10
    logging:
      options:
        max-size: "50m"

  khoj-database:
    container_name: khoj-database
    image: docker.io/pgvector/pgvector:pg15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - khoj_db:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 10s
      retries: 30
    networks:
      - khoj_net
    logging:
      options:
        max-size: "50m"
    restart: on-failure:10

  khoj-sandbox:
    container_name: khoj-sandbox
    image: ghcr.io/khoj-ai/terrarium:latest
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 2
    networks:
      - khoj_net
    logging:
      options:
        max-size: "50m"
    restart: on-failure:10

  khoj-search:
    container_name: khoj-search
    image: docker.io/searxng/searxng:latest
    volumes:
      - khoj_search:/etc/searxng
    environment:
      - SEARXNG_BASE_URL=http://localhost:8080/
    networks:
      - khoj_net
    logging:
      options:
        max-size: "50m"
    restart: on-failure:10


  # Agent Zero
  a0-ts:
    image: tailscale/tailscale:latest
    container_name: a0-ts
    hostname: a0
    environment:
      - TS_AUTHKEY
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_SERVE_CONFIG=/config/a0-serve.json
    volumes:
      - ./ts-data/a0:/var/lib/tailscale
      - ./ts-config:/config
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    restart: on-failure:10
    networks:
      - a0_net
    logging:
      options:
        max-size: "50m"

  agent-zero-server:
    image: frdel/agent-zero-run:latest
    container_name: agent-zero-server
    network_mode: service:a0-ts
    volumes:
      - ./agent_zero_data:/a0
    restart: on-failure:10
    depends_on:
      - a0-ts
    logging:
      options:
        max-size: "50m"  

  stirling-pdf:
    image: docker.stirlingpdf.com/stirlingtools/stirling-pdf:latest
    volumes:
      - ./StirlingPDF/trainingData:/usr/share/tessdata # Required for extra OCR languages
      - ./StirlingPDF/extraConfigs:/configs
      - ./StirlingPDF/customFiles:/customFiles/
      - ./StirlingPDF/logs:/logs/
      - ./StirlingPDF/pipeline:/pipeline/
    environment:
      - DOCKER_ENABLE_SECURITY=false
      - LANGS=en_GB
    network_mode: service:stirling-pdf-ts
    restart: on-failure:10
    depends_on:
      - stirling-pdf-ts
    logging:
      options:
        max-size: "50m"  

  stirling-pdf-ts:
    image: tailscale/tailscale:latest
    container_name: stirling-pdf-ts
    hostname: stirling-pdf
    environment:
      - TS_AUTHKEY
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    volumes:
      - ./ts-data/stirling-pdf:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    restart: on-failure:10
    networks:
      - stirling_pdf_net
    logging:
      options:
        max-size: "50m"

networks:
  immich_net:
    driver: bridge
  khoj_net:
    driver: bridge
  a0_net:
    driver: bridge
  stirling_pdf_net:
    driver: bridge

volumes:
  khoj_config:
  khoj_db:
  khoj_models:
  khoj_search:
  model-cache:


